[package]
name = "context-creator"
version = "1.0.1"
edition = "2021"
rust-version = "1.74.0"                                                                               # Specify MSRV
description = "A high-performance Rust CLI for optimizing context engineering in agentic programming"
authors = ["Matias Villaverde"]
repository = "https://github.com/matiasvillaverde/context-creator"
license = "MIT"
keywords = ["cli", "llm", "code", "context", "markdown"]
categories = ["command-line-utilities", "development-tools"]
readme = "README.md"
homepage = "https://github.com/matiasvillaverde/context-creator"
documentation = "https://github.com/matiasvillaverde/context-creator#readme"
exclude = [".github/*", ".gitignore", "tests/*", "benches/*", "target/*"]

[dependencies]
# Error handling
anyhow = "1.0"
thiserror = "1.0"

# CLI
clap = { version = "4.5", features = ["derive", "env", "color", "suggestions"] }

# Data structures & algorithms
dashmap = "5.5"
itertools = "0.13"
lru = "0.12"
petgraph = "0.6"

# Serialization
serde = { version = "1.0", features = ["derive"] }
toml = "0.8"

# File system & paths
dirs = "5.0"
glob = "0.3"
ignore = "0.4"
tempfile = "3.10"
walkdir = "2.5"

# Async runtime
tokio = { version = "1", features = [
  "rt-multi-thread",
  "macros",
  "fs",
  "io-util",
  "time",
] }
async-trait = "0.1"
deadpool = "0.10"

# Parallelization
rayon = "1.10"

# Caching
moka = { version = "0.12", features = ["future"] }

# Language parsing
tree-sitter = "0.20"
tree-sitter-rust = "0.20"
tree-sitter-javascript = "0.20"
tree-sitter-typescript = "0.20"
tree-sitter-python = "0.20"
tree-sitter-go = "0.20"
tree-sitter-java = "0.20"

# Utilities
arboard = "3.2"
tiktoken-rs = "0.5"

[dev-dependencies]
assert_cmd = "2.0"
criterion = { version = "0.5", features = ["html_reports"] }
predicates = "3.1"
proptest = "1.4"                                             # Property-based testing
insta = "1.34"                                               # Snapshot testing

# Profile configurations
[profile.release]
lto = "fat"            # More explicit than 'true'
codegen-units = 1
strip = true
opt-level = 3
panic = "abort"        # Smaller binary size
overflow-checks = true # Safety even in release

[profile.release-fast]
inherits = "release"
lto = "thin"         # Faster compilation
codegen-units = 16

[profile.dev]
opt-level = 0
debug = 1
incremental = true
codegen-units = 256
split-debuginfo = "unpacked" # Faster linking on macOS/Linux

[profile.test]
opt-level = 0
debug = 2           # Full debug info for tests
incremental = true
codegen-units = 256

[profile.bench]
inherits = "release"
debug = 1            # Debug info for profiling

# Benchmarks
[[bench]]
name = "benchmarks"
harness = false

[[bench]]
name = "type_resolution_bench"
harness = false

# Linting configuration
[lints.rust]
unsafe_code = "warn"
missing_docs = "warn"
missing_debug_implementations = "warn"
missing_copy_implementations = "warn"
trivial_casts = "warn"
trivial_numeric_casts = "warn"
unused_extern_crates = "warn"
unused_import_braces = "warn"
unused_qualifications = "warn"
unused_results = "warn"
variant_size_differences = "warn"
rust_2018_idioms = "warn"

[lints.clippy]
# Groups
all = "warn"
pedantic = "warn"
nursery = "warn"
cargo = "warn"

# Performance
inefficient_to_string = "warn"
trivially_copy_pass_by_ref = "warn"
cloned_instead_of_copied = "warn"
manual_memcpy = "warn"
map_unwrap_or = "warn"
unnecessary_to_owned = "warn"

# Error handling
panic = "warn"
unwrap_used = "warn"
expect_used = "warn"
panic_in_result_fn = "warn"
unwrap_in_result = "warn"
map_err_ignore = "warn"

# Code quality
missing_const_for_fn = "warn"
use_self = "warn"
items_after_statements = "warn"
multiple_inherent_impl = "warn"
cognitive_complexity = "warn"
too_many_lines = "warn"
too_many_arguments = "warn"
type_complexity = "warn"
needless_pass_by_value = "warn"
needless_continue = "warn"
match_same_arms = "warn"
if_not_else = "warn"
single_match_else = "warn"

# Style
mod_module_files = "warn"
separated_literal_suffix = "warn"
wildcard_imports = "warn"
enum_glob_use = "warn"

# Async
future_not_send = "warn"
await_holding_lock = "warn"
await_holding_refcell_ref = "warn"

# Security
suspicious_operation_groupings = "warn"

# Allowed - too pedantic or not applicable
module_name_repetitions = "allow"
must_use_candidate = "allow"
cast_possible_truncation = "allow"
cast_precision_loss = "allow"
cast_sign_loss = "allow"
float_cmp = "allow"
inline_always = "allow"
similar_names = "allow"
doc_markdown = "allow"
stable_sort_primitive = "allow"

# Cargo-specific lints
multiple_crate_versions = "warn"
wildcard_dependencies = "warn"

[badges]
maintenance = { status = "actively-developed" }
